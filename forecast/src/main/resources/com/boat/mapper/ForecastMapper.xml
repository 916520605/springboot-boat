<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boat.mapper.ForecastMapper">
    <resultMap id="BaseResultMap" type="com.boat.entity.Forecast">
        <!--@mbg.generated-->
        <!--@Table t_forecast-->
        <id column="id" property="id"/>
        <result column="ship_name" property="shipName"/>
        <result column="imo" property="imo"/>
        <result column="depart_port" property="departPort"/>
        <result column="last_port" property="lastPort"/>
        <result column="next_port" property="nextPort"/>
        <result column="pore_arrive_time" property="poreArriveTime"/>
        <result column="pore_leave_time" property="poreLeaveTime"/>
        <result column="dock" property="dock"/>
        <result column="port" property="port"/>
        <result column="purpose" property="purpose"/>
        <result column="goods_name" property="goodsName"/>
        <result column="quantity" property="quantity"/>
        <result column="draft_water" property="draftWater"/>
        <result column="pilot_station" property="pilotStation"/>
        <result column="tug_company" property="tugCompany"/>
        <result column="remarks" property="remarks"/>
        <result column="voyage" property="voyage"/>
        <result column="base_ship_id" property="baseShipId"/>
        <result column="delegation" property="delegation"/>
        <result column="tug" property="tug"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, ship_name, base_ship_id,imo,voyage, depart_port, last_port, next_port, pore_arrive_time, pore_leave_time,
        dock, port, purpose, goods_name, quantity, draft_water, pilot_station, tug_company,
        remarks,delegation,tug
    </sql>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.boat.entity.Forecast"
            useGeneratedKeys="true">
        insert into t_forecast
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="shipName != null and shipName != ''">
                ship_name,
            </if>
            <if test="imo != null and imo != ''">
                imo,
            </if>
            <if test="baseShipId != null">
                base_ship_id,
            </if>
            <if test="voyage != null and voyage != ''">
                voyage,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="shipName != null and shipName != ''">
                #{shipName},
            </if>
            <if test="imo != null and imo != ''">
                #{imo},
            </if>
            <if test="baseShipId != null">
                #{baseShipId},
            </if>
            <if test="voyage != null and voyage != ''">
                #{voyage},
            </if>
        </trim>
    </insert>

    <select id="findAllByAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_forecast
        <where>
            <if test="shipName != null and shipName != ''">
                and ship_name like concat('%', #{shipName}, '%')
            </if>
            <if test="imo != null and imo != ''">
                and imo like concat('%', #{imo}, '%')
            </if>
            <if test="voyage != null and voyage != ''">
                and voyage like concat('%',#{voyage},'%')
            </if>
        </where>
    </select>

    <select id="selectBySearchNotInIds" resultMap="com.boat.mapper.BaseShipMapper.BaseResultMap">
        select
        <include refid="com.boat.mapper.BaseShipMapper.Base_Column_List"/>
        from
        (select
        <include refid="com.boat.mapper.BaseShipMapper.Base_Column_List"/>
        from t_baseship
        <where>
            id not in
            (select base_ship_id from t_forecast)
        </where>
        ) as i
        <where>
            <if test="baseShip.shipName != null and baseShip.shipName != ''">
                and shipName like concat('%', #{baseShip.shipName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="baseShip.imo != null and baseShip.imo != ''">
                and imo like concat('%', #{baseShip.imo,jdbcType=VARCHAR}, '%')
            </if>
            and flag = 1 order by creatTime desc
        </where>
    </select>

    <!--auto generated by MybatisCodeHelper on 2022-11-28-->
    <select id="selectBaseShipIdByBaseShipId" resultType="java.lang.Long">
        select base_ship_id
        from t_forecast
        where base_ship_id = #{baseShipId}
    </select>

    <!--auto generated by MybatisCodeHelper on 2022-11-28-->
    <update id="updateByBaseShipId">
        update t_forecast
        <set>
            <if test="shipName != null and shipName != ''">
                ship_name = #{shipName},
            </if>
            <if test="imo != null and imo != ''">
                imo = #{imo},
            </if>
        </set>
        where base_ship_id=#{baseShipId}
    </update>

    <!--auto generated by MybatisCodeHelper on 2022-11-28-->
    <delete id="deleteByBaseShipIds">
        delete from t_forecast
        where base_ship_id in
        <foreach collection="baseShipIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectById" resultMap="BaseResultMap">
        select *
        from t_forecast
        where id = #{id}
    </select>

    <!--auto generated by MybatisCodeHelper on 2022-12-13-->
    <update id="updateById">
        update t_forecast
        <set>
            <if test="updated.shipName != null and updated.shipName != ''">
                ship_name = #{updated.shipName},
            </if>
            <if test="updated.imo != null and updated.imo != ''">
                imo = #{updated.imo},
            </if>
            <if test="updated.departPort != null and updated.departPort != ''">
                depart_port = #{updated.departPort},
            </if>
            <if test="updated.lastPort != null and updated.lastPort != ''">
                last_port = #{updated.lastPort},
            </if>
            <if test="updated.nextPort != null and updated.nextPort != ''">
                next_port = #{updated.nextPort},
            </if>
            <if test="updated.poreArriveTime != null">
                pore_arrive_time = #{updated.poreArriveTime},
            </if>
            <if test="updated.poreLeaveTime != null">
                pore_leave_time = #{updated.poreLeaveTime},
            </if>
            <if test="updated.dock != null and updated.dock != ''">
                dock = #{updated.dock},
            </if>
            <if test="updated.port != null and updated.port != ''">
                port = #{updated.port},
            </if>
            <if test="updated.purpose != null">
                purpose = #{updated.purpose},
            </if>
            <if test="updated.goodsName != null and updated.goodsName != ''">
                goods_name = #{updated.goodsName},
            </if>
            <if test="updated.quantity != null">
                quantity = #{updated.quantity},
            </if>
            <if test="updated.draftWater != null">
                draft_water = #{updated.draftWater},
            </if>
            <if test="updated.pilotStation != null and updated.pilotStation != ''">
                pilot_station = #{updated.pilotStation},
            </if>
            <if test="updated.tugCompany != null and updated.tugCompany != ''">
                tug_company = #{updated.tugCompany},
            </if>
            <if test="updated.remarks != null and updated.remarks != ''">
                remarks = #{updated.remarks},
            </if>
            <if test="updated.voyage != null and updated.voyage != ''">
                voyage = #{updated.voyage},
            </if>
            <if test="updated.baseShipId != null">
                base_ship_id = #{updated.baseShipId},
            </if>
            <if test="updated.delegation != null and updated.delegation != ''">
                delegation = #{updated.delegation},
            </if>
            <if test="updated.tug != null and updated.tug != ''">
                tug = #{updated.tug},
            </if>
        </set>
        where id=#{updated.id}
    </update>
</mapper>